apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-configmap-to-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: {{ include "gpu-metrics-exporter.serviceAccountName" . }}
      containers:
        - name: migrate
          image: "{{.Values.migrate.image.repository}}:{{.Values.migrate.image.tag}}"
          command:
            - /bin/sh
            - -c
            - |
              configmap_data=$(kubectl get configmap -n {{ .Release.Namespace }} {{ include "gpu-metrics-exporter.config-map" . }} -o json)

              if echo $configmap_data | jq -e '.data["API_KEY"]' > /dev/null; then
                secret_value=$(echo $configmap_data | jq -r '.data["API_KEY"]')

                kubectl create secret generic {{ include "gpu-metrics-exporter.fullname" . }} -n {{ .Release.Namespace }} \
                  --from-literal=API_KEY=$secret_value \
                  --dry-run=client -o yaml | kubectl apply -f -

                kubectl patch configmap {{ include "gpu-metrics-exporter.config-map" . }} -n {{ .Release.Namespace }} \
                  --type=json -p='[{"op": "remove", "path": "/data/API_KEY"}]'

                kubectl rollout restart daemonset/{{ include "gpu-metrics-exporter.fullname" . }} -n {{ .Release.Namespace }}
              else
                echo "API_KEY not found in the ConfigMap. Skipping migration."
              fi
          securityContext:
            runAsUser: 1000
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
      restartPolicy: Never