// Code generated by mockery v2.42.0. DO NOT EDIT.

package castai

import (
	context "context"

	pb "github.com/castai/gpu-metrics-exporter/pb"
	mock "github.com/stretchr/testify/mock"
)

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

type MockClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClient) EXPECT() *MockClient_Expecter {
	return &MockClient_Expecter{mock: &_m.Mock}
}

// UploadBatch provides a mock function with given fields: ctx, batch
func (_m *MockClient) UploadBatch(ctx context.Context, batch *pb.MetricsBatch) error {
	ret := _m.Called(ctx, batch)

	if len(ret) == 0 {
		panic("no return value specified for UploadBatch")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb.MetricsBatch) error); ok {
		r0 = rf(ctx, batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockClient_UploadBatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UploadBatch'
type MockClient_UploadBatch_Call struct {
	*mock.Call
}

// UploadBatch is a helper method to define mock.On call
//   - ctx context.Context
//   - batch *pb.MetricsBatch
func (_e *MockClient_Expecter) UploadBatch(ctx interface{}, batch interface{}) *MockClient_UploadBatch_Call {
	return &MockClient_UploadBatch_Call{Call: _e.mock.On("UploadBatch", ctx, batch)}
}

func (_c *MockClient_UploadBatch_Call) Run(run func(ctx context.Context, batch *pb.MetricsBatch)) *MockClient_UploadBatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*pb.MetricsBatch))
	})
	return _c
}

func (_c *MockClient_UploadBatch_Call) Return(_a0 error) *MockClient_UploadBatch_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClient_UploadBatch_Call) RunAndReturn(run func(context.Context, *pb.MetricsBatch) error) *MockClient_UploadBatch_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockClient creates a new instance of MockClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClient {
	mock := &MockClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
